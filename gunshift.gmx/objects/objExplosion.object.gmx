<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>RADIUS_MIN = 20;
RADIUS_MAX = 50;
SPEED_MIN = 0.075;
SPEED_MAX = 0.1;

base_size = 1;


radius = 0;
target_radius = random_range(RADIUS_MIN, RADIUS_MAX);
image_alpha = 1;
speed_ = random_range(SPEED_MIN, SPEED_MAX);
fade_speed = random_range(SPEED_MIN * 2, SPEED_MIN * 4);
generation = 0;
spawned_more = false;

image_blend = make_color_hsv(irandom_range(15, 40), random_range(0.75, 1) * 255, random_range(0.9, 1) * 255);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>radius = ease(radius, target_radius, speed_);

if (radius &gt; target_radius / 4 &amp;&amp; !spawned_more) {
    var gen = irandom_range(0, generation);
    if (gen &lt;= 2) {
        repeat (min(gen + 1, 2)) {
            var len = random_range(0, random_range(target_radius, target_radius * 2));
            var dir = random_range(0, 360);
            var e = instance_create(x + lengthdir_x(len, dir), y + lengthdir_y(len, dir), objExplosion);
            e.generation = generation + 1;
        }
    }
    spawned_more = true;
}


if (radius &gt; target_radius * 3 / 4)
    image_alpha = ease(image_alpha, 0, fade_speed);


if (image_alpha &lt; 0.01) {
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(image_blend);
draw_set_alpha(image_alpha);
draw_circle(x, y, radius, false);
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
