<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_audio</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
// initialize music audio channels in array (for layering music)
for (var j = MAX_MUSIC_CHANNELS; j &gt; 0; j--) {
    music_layer[j] = audio_emitter_create();
}

// initialize gun audio channels in an array (to cap the total amount of guns that can shoot at the same time)
for (var i = MAX_GUN_CHANNELS; i &gt; 0; i--)
    sfx_channel[i] = audio_emitter_create();


    
music_emitter = audio_emitter_create();
track_position = 0;
music_volume = 1; //0 is silent, 1 is full volume
//audio_sound_gain(current_track, music_volume, 0); //0 means instantaneous, but millaseconds can be used for fade effect

current_track = audio_play_sound(sound1_drums,1,true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>track_position = audio_sound_get_track_position(current_track);

if (keyboard_check_pressed(ord('1'))) {
    audio_resume_all();
}

if (keyboard_check_pressed(ord('2'))) {
    audio_pause_all();
}

if (keyboard_check_pressed(ord('3'))) {
    audio_sound_set_track_position(current_track,track_position - 5);
}

if (keyboard_check_pressed(ord('4'))) {
    audio_sound_set_track_position(current_track,track_position + 5);
}


// test sound effect
//if (keyboard_check_pressed(vk_space))
//    audio_play_sound_on(sfx_channel_0,sound8_cymbal_and_bd,false, 1); //1 is priority, which is like depth but for sound

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
draw_text(x + 4, y + 4, "Track position = " + string(track_position));

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
